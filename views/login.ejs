<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <title>Express Movies</title>
    <link rel="stylesheet" href="../public/style.css" />
    <script src="https://unpkg.com/axios@0.15.3/dist/axios.min.js"></script>
</head>
<body>
<%- include('partials/header') %>

<div class="central">
    <h1><%= title %></h1>
    <br>
    <div>
        <form id="login">
            <legend>Veuillez saisir vos identifiants</legend>
            <label for="email">email</label>
            <input type="text" name="email" id="email">
            <label for="password">mot de passe</label>
            <input type="password" name="password" id="password">
            <button type="submit">connexion</button>
        </form>
    </div>
    <!-- Mode display none dans style.css pour #profile   -->
    <div id="profile">
        <button id="disconnectBtn">déconnexion</button>
        <button id="display-payload">voir le payload</button>
        <div id="decoded-payload"></div>

    </div>

</div>

<footer>
    <%- include('partials/footer') %>
</footer>
<script>
    let form = document.querySelector('form');
    form.addEventListener("submit", loginUser);

    let loginArea = document.querySelector('#login');
    let profileArea = document.querySelector('#profile');

    let displayPayloadBtn = document.querySelector('#display-payload');
    displayPayloadBtn.addEventListener('click', displayPayload);

    let disconnectBtn = document.querySelector('#disconnectBtn');
    disconnectBtn.addEventListener('click', disconnect);
    let connectionLinkArea = document.querySelector('#connectionLink');
    handleFormDisplay();                // Appel la méthode au chargementde la page

    function loginUser(event) {
        loginUserWithXHR(event);
    }

    function loginUserWithXHR(event) {
        event.preventDefault();
        console.log('loginUserWithXHR');

        // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/send
        var xhr = new XMLHttpRequest();
        xhr.open("POST", '/login', true);

        //Send the proper header information along with the request
        xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");

        xhr.onreadystatechange = function() {    //Call a function when the state changes.
            if(xhr.readyState === XMLHttpRequest.DONE && xhr.status === 200) {
                let token = xhr.response;                                       // Pour les vieux navigateurs var à la place de let
                localStorage.setItem('token', token);
                switchToLoggedInMode();
                form.reset();
            }
        }
        var email = document.getElementById('email').value;
        var password = document.getElementById('password').value;
        var payLoad = "email=" + email + "&" + "password=" + password;
        xhr.send(payLoad);
    }

    function handleFormDisplay() {
        if(localStorage.getItem('token')) {
            switchToLoggedInMode();
        } else {
            switchToLoggedOutMode();
        }
    }

    function disconnect() {
        switchToLoggedOutMode();
        localStorage.removeItem('token');
    }

    function switchToLoggedInMode() {
        loginArea.style.display = 'none';
        profileArea.style.display = 'block';
        connectionLinkArea.innerHTML = '<a href="/login">déconnexion</a>';
    }

    function switchToLoggedOutMode() {
        loginArea.style.display = 'block';
        profileArea.style.display = 'none';
        connectionLinkArea.innerHTML = '<a href="/login">connexion</a>';
    }

    function displayPayload() {
        let payload = parseJWT();           // Appel la méthode
        let decodedPayloadDiv = document.querySelector('#decoded-payload');         // Récupère la div #decoded-payload
        decodedPayloadDiv.innerHTML = `<pre>${JSON.stringify(payload)}</pre>`;      // Ajoute le payload à la div
    }

    function parseJWT() {
        let tokenFromLocalStorage = localStorage.getItem('token');      // Récupère le token
        if(tokenFromLocalStorage) {
            let base64Payload = tokenFromLocalStorage.split('.')[1];    // Split le token et prend la deuxième partie
            return JSON.parse(window.atob(base64Payload));              // Décode la 2nd partie du token et la Json
        } else {                                                        // à l'aide de la méthode atob
            return 'not token to parse';
        }
    }


    // function loadMode() {
    //     if(localStorage.getItem('token')) {
    //         switchToLoggedInMode();
    //     }
    // }
    //
    // window.onload = loadMode;

</script>
</body>
</html>